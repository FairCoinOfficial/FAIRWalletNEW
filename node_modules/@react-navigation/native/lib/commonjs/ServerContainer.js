"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ServerContainer = ServerContainer;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _reactNativeScreens = require("react-native-screens");
var _reactNavigation = require("@react-navigation/native");
var _reactNavigationStack = require("@react-navigation/stack");
var _reactNativeReanimated = _interopRequireDefault(require("react-native-reanimated"));
var _reactNativeGestureHandler = require("react-native-gesture-handler");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) return cache.get(obj); var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc); else newObj[key] = obj[key]; } } newObj.default = obj; if (cache) cache.set(obj, newObj); return newObj; }
function ServerContainer({
  context,
  location,
  initialState,
  onStateChange,
  children
}) {
  const {
    theme
  } = (0, _reactNavigation.useTheme)();
  const {
    linking
  } = (0, _reactNavigation.useLinking)();
  const {
    screens
  } = (0, _reactNavigation.useScreens)();
  const {
    windowDimensions
  } = (0, _reactNavigation.useWindowDimensions)();
  const {
    syncState
  } = (0, _reactNavigation.useSyncState)();
  const {
    web
  } = (0, _reactNavigation.useWeb)();
  const {
    contextNavigator
  } = (0, _react.useContext)(_reactNavigation.NavigationContext);
  const {
    navKey
  } = (0, _reactNavigation.getNavKey)();
  const {
    pathFromState
  } = (0, _reactNavigation.getPathFromState)();
  const {
    stateFromPath
  } = (0, _reactNavigation.getStateFromPath)();
  const {
    navigation
  } = (0, _reactNavigation.useNavigation)();
  const {
    stack
  } = (0, _reactNavigationStack.createStackNavigator)();
  const {
    safeArea
  } = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();
  const {
    reanimated
  } = (0, _reactNativeReanimated.default)();
  const {
    gestureHandler
  } = (0, _reactNativeGestureHandler.GestureHandlerRootView)();
  return /*#__PURE__*/_react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, null, /*#__PURE__*/_react.default.createElement(_reactNativeGestureHandler.GestureHandlerRootView, {
    style: {
      flex: 1
    }
  }, /*#__PURE__*/_react.default.createElement(_reactNavigation.NavigationContainer, {
    theme: theme,
    linking: linking,
    initialState: initialState,
    onStateChange: onStateChange
  }, /*#__PURE__*/_react.default.createElement(_reactNavigationStack.Stack.Navigator, {
    screenOptions: {
      headerShown: false
    }
  }, children))));
}
